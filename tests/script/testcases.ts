/** Triplets of `[hex string, debugger format, Bitcoin Core format]`. */
export const validSymmetricScripts: Array<[string, string, string]> = [
  ['', '', ''],
  ['00', '0', '0'],
  ['51', '01', '1'],
  ['60', '10', '16'],
  ['4f', '81', '-1'],
  ['0401000000', '01000000', '1'],
  ['04deadbeef', 'deadbeef', '-1874767326'],
  [
    `4b${''.padEnd(75 * 2, '0')}`,
    ''.padEnd(75 * 2, '0'),
    ''.padEnd(75 * 2, '0'),
  ],
  [
    `4c4c${''.padEnd(76 * 2, '0')}`,
    ''.padEnd(76 * 2, '0'),
    ''.padEnd(76 * 2, '0'),
  ],
  [
    `4cff${''.padEnd(255 * 2, '0')}`,
    ''.padEnd(255 * 2, '0'),
    ''.padEnd(255 * 2, '0'),
  ],
  [
    `4d0001${''.padEnd(256 * 2, '0')}`,
    ''.padEnd(256 * 2, '0'),
    ''.padEnd(256 * 2, '0'),
  ],
  [
    '004f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9baff',
    '0 81 OP_RESERVED 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 OP_NOP OP_VER OP_IF OP_NOTIF OP_VERIF OP_VERNOTIF OP_ELSE OP_ENDIF OP_VERIFY OP_RETURN OP_TOALTSTACK OP_FROMALTSTACK OP_2DROP OP_2DUP OP_3DUP OP_2OVER OP_2ROT OP_2SWAP OP_IFDUP OP_DEPTH OP_DROP OP_DUP OP_NIP OP_OVER OP_PICK OP_ROLL OP_ROT OP_SWAP OP_TUCK OP_CAT OP_SUBSTR OP_LEFT OP_RIGHT OP_SIZE OP_INVERT OP_AND OP_OR OP_XOR OP_EQUAL OP_EQUALVERIFY OP_RESERVED1 OP_RESERVED2 OP_1ADD OP_1SUB OP_2MUL OP_2DIV OP_NEGATE OP_ABS OP_NOT OP_0NOTEQUAL OP_ADD OP_SUB OP_MUL OP_DIV OP_MOD OP_LSHIFT OP_RSHIFT OP_BOOLAND OP_BOOLOR OP_NUMEQUAL OP_NUMEQUALVERIFY OP_NUMNOTEQUAL OP_LESSTHAN OP_GREATERTHAN OP_LESSTHANOREQUAL OP_GREATERTHANOREQUAL OP_MIN OP_MAX OP_WITHIN OP_RIPEMD160 OP_SHA1 OP_SHA256 OP_HASH160 OP_HASH256 OP_CODESEPARATOR OP_CHECKSIG OP_CHECKSIGVERIFY OP_CHECKMULTISIG OP_CHECKMULTISIGVERIFY OP_NOP1 OP_CHECKLOCKTIMEVERIFY OP_CHECKSEQUENCEVERIFY OP_NOP4 OP_NOP5 OP_NOP6 OP_NOP7 OP_NOP8 OP_NOP9 OP_NOP10 OP_CHECKSIGADD OP_INVALIDOPCODE',
    '0 -1 OP_RESERVED 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 OP_NOP OP_VER OP_IF OP_NOTIF OP_VERIF OP_VERNOTIF OP_ELSE OP_ENDIF OP_VERIFY OP_RETURN OP_TOALTSTACK OP_FROMALTSTACK OP_2DROP OP_2DUP OP_3DUP OP_2OVER OP_2ROT OP_2SWAP OP_IFDUP OP_DEPTH OP_DROP OP_DUP OP_NIP OP_OVER OP_PICK OP_ROLL OP_ROT OP_SWAP OP_TUCK OP_CAT OP_SUBSTR OP_LEFT OP_RIGHT OP_SIZE OP_INVERT OP_AND OP_OR OP_XOR OP_EQUAL OP_EQUALVERIFY OP_RESERVED1 OP_RESERVED2 OP_1ADD OP_1SUB OP_2MUL OP_2DIV OP_NEGATE OP_ABS OP_NOT OP_0NOTEQUAL OP_ADD OP_SUB OP_MUL OP_DIV OP_MOD OP_LSHIFT OP_RSHIFT OP_BOOLAND OP_BOOLOR OP_NUMEQUAL OP_NUMEQUALVERIFY OP_NUMNOTEQUAL OP_LESSTHAN OP_GREATERTHAN OP_LESSTHANOREQUAL OP_GREATERTHANOREQUAL OP_MIN OP_MAX OP_WITHIN OP_RIPEMD160 OP_SHA1 OP_SHA256 OP_HASH160 OP_HASH256 OP_CODESEPARATOR OP_CHECKSIG OP_CHECKSIGVERIFY OP_CHECKMULTISIG OP_CHECKMULTISIGVERIFY OP_NOP1 OP_CHECKLOCKTIMEVERIFY OP_CHECKSEQUENCEVERIFY OP_NOP4 OP_NOP5 OP_NOP6 OP_NOP7 OP_NOP8 OP_NOP9 OP_NOP10 OP_CHECKSIGADD OP_INVALIDOPCODE',
  ],
]

/** Triplets of `[hex string, debugger format, Bitcoin Core format]`. */
export const validScripts: Array<[string, string, string]> = [
  ...validSymmetricScripts,
  ['4c01ff', 'ff', '-127'],
  ['4d020000ff', '00ff', '-32512'],
  ['4e030000000000ff', '0000ff', '-8323072'],
  [
    '004f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff',
    '0 81 OP_RESERVED 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 OP_NOP OP_VER OP_IF OP_NOTIF OP_VERIF OP_VERNOTIF OP_ELSE OP_ENDIF OP_VERIFY OP_RETURN OP_TOALTSTACK OP_FROMALTSTACK OP_2DROP OP_2DUP OP_3DUP OP_2OVER OP_2ROT OP_2SWAP OP_IFDUP OP_DEPTH OP_DROP OP_DUP OP_NIP OP_OVER OP_PICK OP_ROLL OP_ROT OP_SWAP OP_TUCK OP_CAT OP_SUBSTR OP_LEFT OP_RIGHT OP_SIZE OP_INVERT OP_AND OP_OR OP_XOR OP_EQUAL OP_EQUALVERIFY OP_RESERVED1 OP_RESERVED2 OP_1ADD OP_1SUB OP_2MUL OP_2DIV OP_NEGATE OP_ABS OP_NOT OP_0NOTEQUAL OP_ADD OP_SUB OP_MUL OP_DIV OP_MOD OP_LSHIFT OP_RSHIFT OP_BOOLAND OP_BOOLOR OP_NUMEQUAL OP_NUMEQUALVERIFY OP_NUMNOTEQUAL OP_LESSTHAN OP_GREATERTHAN OP_LESSTHANOREQUAL OP_GREATERTHANOREQUAL OP_MIN OP_MAX OP_WITHIN OP_RIPEMD160 OP_SHA1 OP_SHA256 OP_HASH160 OP_HASH256 OP_CODESEPARATOR OP_CHECKSIG OP_CHECKSIGVERIFY OP_CHECKMULTISIG OP_CHECKMULTISIGVERIFY OP_NOP1 OP_CHECKLOCKTIMEVERIFY OP_CHECKSEQUENCEVERIFY OP_NOP4 OP_NOP5 OP_NOP6 OP_NOP7 OP_NOP8 OP_NOP9 OP_NOP10 OP_CHECKSIGADD OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_INVALIDOPCODE',
    '0 -1 OP_RESERVED 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 OP_NOP OP_VER OP_IF OP_NOTIF OP_VERIF OP_VERNOTIF OP_ELSE OP_ENDIF OP_VERIFY OP_RETURN OP_TOALTSTACK OP_FROMALTSTACK OP_2DROP OP_2DUP OP_3DUP OP_2OVER OP_2ROT OP_2SWAP OP_IFDUP OP_DEPTH OP_DROP OP_DUP OP_NIP OP_OVER OP_PICK OP_ROLL OP_ROT OP_SWAP OP_TUCK OP_CAT OP_SUBSTR OP_LEFT OP_RIGHT OP_SIZE OP_INVERT OP_AND OP_OR OP_XOR OP_EQUAL OP_EQUALVERIFY OP_RESERVED1 OP_RESERVED2 OP_1ADD OP_1SUB OP_2MUL OP_2DIV OP_NEGATE OP_ABS OP_NOT OP_0NOTEQUAL OP_ADD OP_SUB OP_MUL OP_DIV OP_MOD OP_LSHIFT OP_RSHIFT OP_BOOLAND OP_BOOLOR OP_NUMEQUAL OP_NUMEQUALVERIFY OP_NUMNOTEQUAL OP_LESSTHAN OP_GREATERTHAN OP_LESSTHANOREQUAL OP_GREATERTHANOREQUAL OP_MIN OP_MAX OP_WITHIN OP_RIPEMD160 OP_SHA1 OP_SHA256 OP_HASH160 OP_HASH256 OP_CODESEPARATOR OP_CHECKSIG OP_CHECKSIGVERIFY OP_CHECKMULTISIG OP_CHECKMULTISIGVERIFY OP_NOP1 OP_CHECKLOCKTIMEVERIFY OP_CHECKSEQUENCEVERIFY OP_NOP4 OP_NOP5 OP_NOP6 OP_NOP7 OP_NOP8 OP_NOP9 OP_NOP10 OP_CHECKSIGADD OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_UNKNOWN OP_INVALIDOPCODE',
  ],
]

export const invalidScripts: string[] = ['01']
